var documenterSearchIndex = {"docs":
[{"location":"references/","page":"References","title":"References","text":"CurrentModule = JGraphs","category":"page"},{"location":"references/#API-Reference","page":"References","title":"API Reference","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"Modules = [JGraphs]","category":"page"},{"location":"references/#JGraphs.JGraph-Tuple{Any}","page":"References","title":"JGraphs.JGraph","text":"JGraph(g::JGraphData)\n\nThe JGraph structure is the core structure of the package when called with a JGraphData argument creates and Object for each node in the graph  and stores them in jnodes and an Object for each edge and stores them in jedges.  Note that jnodes is a Vector, whereas jedges is a Dict with pairs of nodes (integers)  as keys.\n\nnote: Note\nSince JGraph stores Objects it can only be called after a Video has been initialized look at Javis documentation to know all about it.\n\n\n\n\n\n","category":"method"},{"location":"references/#JGraphs.JGraphData","page":"References","title":"JGraphs.JGraphData","text":"JGraphData(graph::AbstractGraph, layout::NetworkLayout.AbstractLayout; kwargs...)\n\nThe JGraphData is the structure used to set all the properties of the graph animation, the graph itself, its layout and all the options useful to animate it in the appropriate way. It should be passed to JGraph to obtain an animation with the specified properties. The keyword arguments will increase to increase in the future.\n\nArguments\n\ngraph::AbstractGraph: A graph as created with LightGraphs and affiliate packages\nlayout::NetworkLayout.AbstractLayout: A layout as provided by NetworkLayout to place the graph nodes in sapce.\n\nKeywords\n\nnode_color sets the color of all nodes\nnode_size sets the size of all nodes\nedges_color sets the colors of all edges\nedges_width sets the width of all edges\nscaling scales the positions of all nodes\nframes the frames during which the animations on the graph will last if not specified elsewhere\nnumbered Defaults to false if set to true labels the nodes with their number as vertices in the graph.\n\n\n\n\n\n","category":"type"},{"location":"references/#JGraphs.GB2Luxor-Tuple{Any}","page":"References","title":"JGraphs.GB2Luxor","text":"GB2Luxor(p)\n\nTransforms a Point defined in GeometryBasics into one defined  in Luxor.\n\n\n\n\n\n","category":"method"},{"location":"references/#JGraphs.draw_node-Tuple","page":"References","title":"JGraphs.draw_node","text":"draw_node(args; center, radius, action)\n\nFunction used to draw a circle. Very similar to Javis.JCircle with the only  difference that it does not use sethue so animating a color change is easier.\n\n\n\n\n\n","category":"method"},{"location":"references/#JGraphs.jedges-Tuple{JGraph}","page":"References","title":"JGraphs.jedges","text":"jedges(jg::JGraph)\n\nAccessor function to the jedges stored in a JGraph. \n\n\n\n\n\n","category":"method"},{"location":"references/#JGraphs.jgraph_morph-Tuple{JGraph, Any, Any}","page":"References","title":"JGraphs.jgraph_morph","text":"jgraph_morph(g::JGraph, layout_to, scaling_to; frames=nothing)\n\nThis functions allows to animate the change from one layout to another for a graph.\n\nArguments\n\ng::JGraph the JGraph to animate.\nlayout_to a NetworkLayout.AbstractLayout that will be applied to nodes and edges \n\nto determine the configuration to reach.\n\nscaling_to an scaling factor to scale the positions of nodes and edges in the animation.\n\nKeywords\n\nframes a range of frames during which the the morph will take place.\n\nIf not specified the animation will last as long aas the JGraph itself.\n\n\n\n\n\n","category":"method"},{"location":"references/#JGraphs.jgraph_walk-Tuple{JGraph, Any}","page":"References","title":"JGraphs.jgraph_walk","text":"jgraph_walk(g::JGraph, walk_func)\n\nThis function will iteratively change the colors of nodes and edges in a graph to draw a path along them of the graph.\n\nArguments\n\ng::JGraph the JGraph on which the walk should be animated\nwalk_func a function that takes as argument and AbstractGraph and returns\n\na set of nodes linked each to the following one by and edge present in the graph. One can use randomwalk and non_backtracking_randomwalk from LightGraphs.\n\n\n\n\n\n","category":"method"},{"location":"references/#JGraphs.jnodes-Tuple{JGraph}","page":"References","title":"JGraphs.jnodes","text":"jnodes(jg::JGraph)\n\nAccessor function to the jnodes stored in a JGraph. \n\n\n\n\n\n","category":"method"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Some examples of what JGraphs together with Javis might help you animate!","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    using LightGraphs, NetworkLayout, JGraphs, Javis \n\n    startinglayout = Spring(dim=2)\n    startingscaling = 50\n    \n    layout2 = Shell()\n    scaling2 = 100\n    \n    layout3 = SquareGrid()\n    scaling3 = 20\n    \n    n_frames = 500\n    mst_frames = 1:400\n    myg = Video(500, 500)\n    Background(1:n_frames, ground(\"white\", \"black\"))\n    g2 = erdos_renyi(40, 0.1)\n    gd2 = JGraphData(g2, \n        startinglayout, \n        scaling=startingscaling, \n        frames=mst_frames, \n        edge_width=1\n    )\n    myJGraph = JGraph(gd2)\n    jgraph_morph(myJGraph, layout2, scaling2, frames=51:150)\n    jgraph_morph(myJGraph, layout3, scaling3, frames=201:300)\n    jgraph_morph(myJGraph, startinglayout, startingscaling, frames=351:451)\n    render(myg, pathname=\"../JGraphs/docs/src/assets/example1.gif\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = JGraphs","category":"page"},{"location":"#JGraphs","page":"Home","title":"JGraphs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for JGraphs.","category":"page"},{"location":"#DO-NOT-USE-YET","page":"Home","title":"DO NOT USE YET","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
